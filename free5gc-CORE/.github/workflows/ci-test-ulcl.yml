name: CI Test

on:
  schedule:
    - cron: '14 19 * * *'  # UTC 19:14 (Local 03:14)
  # pull_request:

env:
  TI_COMPOSE_FILE: ci-test/docker-compose-ci-ulcl-ti.yaml
  MP_COMPOSE_FILE: ci-test/docker-compose-ci-ulcl-mp.yaml
  MAX_RETRIES: 5
  RETRY_INTERVAL: 10
  WAIT_TIMEOUT: 300 # 5 minutes

jobs:
  test:
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 180

    steps:
      - name: Checkout sub-repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1

      - name: Check Docker and Docker Compose
        run: |
          docker --version || exit 1
          docker compose version || exit 1

      - name: Up TI docker compose
        run: |
          if ! docker compose -f ${{ env.TI_COMPOSE_FILE }} up -d --wait --wait-timeout ${{ env.WAIT_TIMEOUT }}; then
            echo "Failed to up docker compose TI"
            exit 1
          fi
          sleep 5

      - name: Run ULCL TI test
        run: |
          set -e
          echo "Starting ULCL TI test..."
          docker exec ci /bin/bash -c "cd /root/test && ./test-ulcl-ti.sh TestULCLTrafficInfluence"

      - name: Down TI docker compose
        if: always()
        run: |
          if ! docker compose -f ${{ env.TI_COMPOSE_FILE }} down; then
            echo "Failed to down docker compose TI"
            exit 1
          fi

      - name: Up MP docker compose
        run: |
          if ! docker compose -f ${{ env.MP_COMPOSE_FILE }} up -d --wait --wait-timeout ${{ env.WAIT_TIMEOUT }}; then
            echo "Failed to up docker compose MP"
            exit 1
          fi
          sleep 5

      - name: Run ULCL MP test
        run: |
          set -e
          echo "Starting ULCL MP test..."
          docker exec ci-1 /bin/bash -c "cd /root/test && ./test-ulcl-mp.sh TestULCLMultiPathCi1"
          docker exec ci-2 /bin/bash -c "cd /root/test && ./test-ulcl-mp.sh TestULCLMultiPathCi2"

      - name: Down MP docker compose
        if: always()
        run: |
          if ! docker compose -f ${{ env.MP_COMPOSE_FILE }} down; then
            echo "Failed to down docker compose MP"
            exit 1
          fi

      - name: Cleanup docker resources
        if: always()
        run: |
          echo "Cleaning up docker resources..."
          docker system prune -a -f
          docker volume prune -f
